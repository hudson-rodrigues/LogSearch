<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="fbdDirectory.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AhUDIYS1TdDAAAAAAElFTkSuQmCC
</value>
  </data>
</root>